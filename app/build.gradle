/*buildscript {
    //添加fabric插件仓库地址
    repositories {
//        maven { url 'https://maven.fabric.io/public' }
        maven { url 'http://s3.amazonaws.com/fabric-artifacts/public' }
    }

    dependencies {
        //添加fabric插件
        classpath 'io.fabric.tools:gradle:1.+'
    }
}*/
apply plugin: 'com.android.application'
apply plugin: 'bugly'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
apply plugin: 'org.greenrobot.greendao'

bugly {
    appId = "fbfedce4bc"
    appKey = "21b77d4f-fb92-4ad9-9031-dc3f78d81ce7"
    debug = true
}
//apply plugin: 'io.fabric'//应用fabric插件

//添加fabric库的仓库地址
repositories {
    jcenter()
//    maven { url 'https://maven.fabric.io/public' }
//    maven { url 'http://s3.amazonaws.com/fabric-artifacts/public' }
    maven { url "https://jitpack.io" }
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion 19
        targetSdkVersion 20
        versionCode 7
        versionName "1.0.7"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        renderscriptTargetApi 27
        renderscriptSupportModeEnabled true
        multiDexEnabled true

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    // 多渠道配置
    /* flavorDimensions "tier"
    productFlavors {
        xiaomi {
            dimension "tier"
        }
        yyb {
            dimension "tier"
        }
        wdj {
            dimension "tier"
        }
    }*/

    signingConfigs {
        debug {
            keyAlias 'cartoonHouse'
            keyPassword 'dmzj@2014'
            storeFile file('E:\\WorkSpace\\cartoonHouse.keystore')
            storePassword 'dmzj@2014'
        }
        release {
            keyAlias 'cartoonHouse'
            keyPassword 'dmzj@2014'
            storeFile file('E:\\WorkSpace\\cartoonHouse.keystore')
            storePassword 'dmzj@2014'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }
}

greendao {
    //数据库schema版本
    schemaVersion 1
    //设置DaoMaster DaoSession Dao包名，默认的是bean所在的包名
    daoPackage 'com.example.myapplication.gen'
    //设置DaoMaster DaoSeeeion Dao目录，默认是build/generated/source/greendao
    targetGenDir 'src/main/java'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    /* api('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {//添加fabric库
                                                                             transitive = true;
                                                                         }*/
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    //    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'jp.wasabeef:glide-transformations:3.3.0'
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.github.Aspsine:SwipeToLoadLayout:1.0.4'
    //    implementation 'com.tencent.bugly:crashreport:2.8.6'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    implementation 'com.tencent.bugly:nativecrashreport:3.6.0'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    implementation 'com.android.support:multidex:1.0.1'
    // 多dex配置
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.2.0
    implementation 'com.google.code.gson:gson:2.1'
    implementation 'com.youth.banner:banner:1.4.10'
    //最新版本
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation project(':mylibrary')
    implementation 'com.gyf.immersionbar:immersionbar:2.3.3'
    implementation 'com.just.agentweb:agentweb:4.0.2' // (必选)
}
